server {
    listen 443 ssl;
    server_name thomasche.top;

    ssl_certificate /etc/letsencrypt/live/thomasche.top/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/thomasche.top/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    client_max_body_size 50m;

    # 安全头部
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # # 🔐 静态资源缓存策略（如 js/css/img 等）
    # location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|ttf|svg|eot|otf|mp4|webm)$ {
    #     expires 7d;
    #     access_log off;
    #     add_header Cache-Control "public, max-age=604800, immutable";
    # }

    # # 🔐 Next.js 静态资源路径（如 /_next/static）
    # location ~* ^/_next/static/ {
    #     expires 7d;
    #     access_log off;
    #     add_header Cache-Control "public, max-age=604800, immutable";
    # }

        location ~ ^/(sitemap\.xml|robots\.txt)$ {
        root /app/deploy/standalone/public;  # ⚠️ 路径需与 Docker 容器实际挂载目录一致
        add_header Content-Type application/xml;
    }

    # ⬅️ 应用入口（默认反向代理）
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 缓存
        proxy_cache html_cache;
        proxy_cache_valid 200 302 1m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status;
    }
}

server {
    listen 80;
    server_name thomasche.top;
    return 301 https://$host$request_uri;
}
